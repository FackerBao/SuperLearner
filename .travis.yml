# .travis.yml for R projects.
# See https://docs.travis-ci.com/user/languages/r/

language: r

# Enable if a more recent version of Ubuntu is helpful.
# This gives us g++-4.8, which is needed for C++11 (e.g. ranger package)
# dist: trusty

# Disable sudo so that we can use container infrastructure and package caching.
# sudo: false
# We need sudo for r_binary_packages listed below.
#sudo: required

#r:
  # Test current version of R, dev version, and previous major verison.
#  - release
# - devel
#  - oldrel

# This only works if sudo = false.
cache: packages

#os:
#  - linux
# - osx

matrix:
  # Report build completion status once non-"allow_failures" builds are done.
  fast_finish: true
  # Allow failures on oldrelease or OSX.
  allow_failures:
     - r: oldrel
  #  - os: osx
  include:
  # oldrel (R 3.3) can't use r_binary_packages, but instead can use Travis's
  # package caching. However if cache is invalidated due to a build error it
  # will be slow to build on the next Travis CI run.
    - os: linux
      r: oldrel
      dist: trusty
      sudo: false
    - os: linux
      r: release
      dist: trusty
      sudo: required
      # Install some packages from prebuilt binaries via cran2deb4ubuntu
      # https://docs.travis-ci.com/user/languages/r/#Additional-Dependency-Fields
      # https://launchpad.net/~marutter/+archive/ubuntu/c2d4u
      # This should speed up the build ideally, when we don't have a prebuilt cache.
      # This list focuses on packages with larger amounts of compilation required.
      # This requires sudo: true.
      r_binary_packages:
        - survival
        - xml
        - RCurl
        - curl
        - openssl
        - git2r
        - jsonlite
        - quantreg
        - dplyr
        - stringi
        - ddalpha
        - prodlim
        - data.table
        - RhpcBLASctl
        - matrixStats
        - devtools
        - kernlab
        - e1071
        - gam
        - gbm
        - party
        - ranger
        - xgboost
        - class
        - kernsmooth
        - RSQLite # for sva
       #  - sva  # Currently broken if installed automatically, but can't be installed as a binary.

compiler:
  - gcc
  #- clang

env:
  global:
    #- R_BUILD_ARGS="--no-build-vignettes --no-manual"
    - R_CHECK_TIME="TRUE"
    - R_CHECK_TESTS="TRUE"
    # This does not appear to do anything.
    - MAKEFLAGS="-j 2"
    # No error if suggested packages are not available.
    #- _R_CHECK_FORCE_SUGGESTS_=0

cran: "http://cran.rstudio.com"
warnings_are_errors: true
#r_check_args: "--no-build-vignettes --no-manual --as-cran --timings"
r_check_args: "--as-cran --timings"
r_build_args:

# Override default Travis build process so that we can add conditional
# reverse dependency checking.
# Build and check lines based on travis docs:
# https://docs.travis-ci.com/user/languages/r/#Customizing-the-Travis-build-steps
# Note: do not create a separate "install:" section, build will fail.
script:
  # Upgrade any old packages.
  - Rscript -e 'devtools::install_deps(upgrade = TRUE, dependencies = TRUE)'
  - R CMD build . #--no-build-vignettes --no-manual
  # Allow up to 25 minutes for checking package.
  - travis_wait 25 R CMD check *.tar.gz --as-cran --timings
  - if [ "${SL_CRAN}" == "true" ]; then
      Rscript --verbose tests/cran/revdep.R;
    fi

addons:
  apt:
    packages:
      # Install nlopt package to help nloptr install.
      - libnlopt-dev
      # Avoid note "Unable to find GhostScript executable" when R CMD check
      # checks "sizes of PDF files"
      - ghostscript

#r_packages:
# Install survival directly, to get the latest version and avoid
# a build error from using an older version.
#  - survival
#  - rlang


r_github_packages:
  - jimhester/covr
  # Use custom devtools that shows more info during revdep_check()
  # - ck37/devtools
  #- jimhester/lintr

bioc_packages:
  - sva
  - genefilter

after_success:
  # Only check test coverage for R = release and OS = linux.
  - test ${TRAVIS_R_VERSION_STRING} == "release" && test ${TRAVIS_OS_NAME} == "linux" && Rscript -e 'covr::codecov()'

#after_failure:
  # This doesn't do anything because travis-tool.sh is no longer used.
  # - ./travis-tool.sh dump_logs
